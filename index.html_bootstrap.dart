library app_bootstrap;

import 'package:polymer/polymer.dart';

import 'package:nuxeo_dart_automation_sandbox/components/nx_connection.dart' as i0;
import 'package:nuxeo_dart_automation_sandbox/components/tree/tree_node.dart' as i1;
import 'package:nuxeo_dart_automation_sandbox/components/tree/tree.dart' as i2;
import 'package:nuxeo_dart_automation_sandbox/components/ui_sidebar.dart' as i3;
import 'package:nuxeo_dart_automation_sandbox/components/nx_repository_browser.dart' as i4;
import 'package:nuxeo_dart_automation_sandbox/components/nx_structures_browser.dart' as i5;
import 'package:nuxeo_dart_automation_sandbox/components/nx_request_monitor.dart' as i6;
import 'package:nuxeo_dart_automation_sandbox/components/nx_request_options.dart' as i7;
import 'package:nuxeo_dart_automation_sandbox/components/nx_widget.dart' as i8;
import 'package:nuxeo_dart_automation_sandbox/components/nx_resource_endpoints.dart' as i9;
import 'package:nuxeo_dart_automation_sandbox/components/nx_operation.dart' as i10;
import 'package:nuxeo_dart_automation_sandbox/components/nx_command_endpoints.dart' as i11;
import 'package:nuxeo_dart_automation_sandbox/app.dart' as i12;
import 'package:smoke/smoke.dart' show Declaration, PROPERTY, METHOD;
import 'package:smoke/static.dart' show useGeneratedCode, StaticConfiguration;
import 'package:nuxeo_dart_automation_sandbox/components/nx_connection.dart' as smoke_0;
import 'package:polymer/polymer.dart' as smoke_1;
import 'package:observe/src/metadata.dart' as smoke_2;
import 'package:nuxeo_dart_automation_sandbox/components/tree/tree_node.dart' as smoke_3;
import 'package:nuxeo_dart_automation_sandbox/components/ui_module.dart' as smoke_4;
import 'package:nuxeo_automation/client.dart' as smoke_5;
import 'package:nuxeo_dart_automation_sandbox/components/tree/tree.dart' as smoke_6;
import 'package:nuxeo_dart_automation_sandbox/components/ui_sidebar.dart' as smoke_7;
import 'package:nuxeo_dart_automation_sandbox/components/nx_repository_browser.dart' as smoke_8;
import 'package:nuxeo_dart_automation_sandbox/components/nx_structures_browser.dart' as smoke_9;
import 'package:nuxeo_dart_automation_sandbox/components/nx_request_monitor.dart' as smoke_10;
import 'package:nuxeo_dart_automation_sandbox/components/nx_request_options.dart' as smoke_11;
import 'package:nuxeo_dart_automation_sandbox/components/nx_widget.dart' as smoke_12;
import 'package:nuxeo_dart_automation_sandbox/components/nx_resource_endpoints.dart' as smoke_13;
import 'package:nuxeo_dart_automation_sandbox/swagger.dart' as smoke_14;
import 'package:nuxeo_automation/rest.dart' as smoke_15;
import 'package:nuxeo_dart_automation_sandbox/components/nx_operation.dart' as smoke_16;
import 'package:nuxeo_automation/automation.dart' as smoke_17;
import 'package:nuxeo_dart_automation_sandbox/components/nx_command_endpoints.dart' as smoke_18;
import 'package:nuxeo_dart_automation_sandbox/app.dart' as smoke_19;
abstract class _M0 {} // PolymerElement & SemanticUI
abstract class _M1 {} // _M0 & ChangeNotifier
abstract class _M10 {} // NXModule & SearchFilter
abstract class _M11 {} // _M10 & SemanticUI
abstract class _M12 {} // _M11 & ChangeNotifier
abstract class _M2 {} // NXElement & SemanticUI
abstract class _M3 {} // _M2 & ChangeNotifier
abstract class _M4 {} // PolymerElement & ChangeNotifier
abstract class _M5 {} // NXModule & SemanticUI
abstract class _M6 {} // _M5 & ChangeNotifier
abstract class _M7 {} // _M5 & SearchFilter
abstract class _M8 {} // _M7 & ChangeNotifier
abstract class _M9 {} // NXElement & ChangeNotifier

void main() {
  useGeneratedCode(new StaticConfiguration(
      checkedMode: false,
      getters: {
        #CURLRequest: (o) => o.CURLRequest,
        #action: (o) => o.action,
        #alert: (o) => o.alert,
        #alerts: (o) => o.alerts,
        #asFileSize: (o) => o.asFileSize,
        #avatar: (o) => o.avatar,
        #body: (o) => o.body,
        #callOp: (o) => o.callOp,
        #canManageTraces: (o) => o.canManageTraces,
        #capitalize: (o) => o.capitalize,
        #categories: (o) => o.categories,
        #category: (o) => o.category,
        #child: (o) => o.child,
        #children: (o) => o.children,
        #connect: (o) => o.connect,
        #connection: (o) => o.connection,
        #connectionId: (o) => o.connectionId,
        #connectionIdChanged: (o) => o.connectionIdChanged,
        #currentTab: (o) => o.currentTab,
        #dataType: (o) => o.dataType,
        #datatype: (o) => o.datatype,
        #description: (o) => o.description,
        #disconnect: (o) => o.disconnect,
        #doc: (o) => o.doc,
        #docChanged: (o) => o.docChanged,
        #docId: (o) => o.docId,
        #docIdChanged: (o) => o.docIdChanged,
        #document: (o) => o.document,
        #documentId: (o) => o.documentId,
        #documentIdChanged: (o) => o.documentIdChanged,
        #endpoint: (o) => o.endpoint,
        #endpointKey: (o) => o.endpointKey,
        #endpointKeyChanged: (o) => o.endpointKeyChanged,
        #endpoints: (o) => o.endpoints,
        #error: (o) => o.error,
        #errors: (o) => o.errors,
        #facet: (o) => o.facet,
        #facets: (o) => o.facets,
        #field: (o) => o.field,
        #fields: (o) => o.fields,
        #filter: (o) => o.filter,
        #goHome: (o) => o.goHome,
        #goRoot: (o) => o.goRoot,
        #headers: (o) => o.headers,
        #icon: (o) => o.icon,
        #id: (o) => o.id,
        #input: (o) => o.input,
        #inputType: (o) => o.inputType,
        #isConnected: (o) => o.isConnected,
        #isConnectedChanged: (o) => o.isConnectedChanged,
        #isFolderish: (o) => o.isFolderish,
        #isNotEmpty: (o) => o.isNotEmpty,
        #item: (o) => o.item,
        #items: (o) => o.items,
        #key: (o) => o.key,
        #keys: (o) => o.keys,
        #label: (o) => o.label,
        #length: (o) => o.length,
        #message: (o) => o.message,
        #method: (o) => o.method,
        #methodChanged: (o) => o.methodChanged,
        #methods: (o) => o.methods,
        #module: (o) => o.module,
        #moduleChanged: (o) => o.moduleChanged,
        #modules: (o) => o.modules,
        #multiple: (o) => o.multiple,
        #multipleSelection: (o) => o.multipleSelection,
        #name: (o) => o.name,
        #navigate: (o) => o.navigate,
        #nodeSelected: (o) => o.nodeSelected,
        #nuxeoUrl: (o) => o.nuxeoUrl,
        #nuxeoUrlChanged: (o) => o.nuxeoUrlChanged,
        #onFileSelected: (o) => o.onFileSelected,
        #op: (o) => o.op,
        #opRequest: (o) => o.opRequest,
        #opResponse: (o) => o.opResponse,
        #operation: (o) => o.operation,
        #operationChanged: (o) => o.operationChanged,
        #operations: (o) => o.operations,
        #opid: (o) => o.opid,
        #opidChanged: (o) => o.opidChanged,
        #param: (o) => o.param,
        #params: (o) => o.params,
        #parent: (o) => o.parent,
        #password: (o) => o.password,
        #path: (o) => o.path,
        #prefix: (o) => o.prefix,
        #properties: (o) => o.properties,
        #request: (o) => o.request,
        #requestChanged: (o) => o.requestChanged,
        #requestOptions: (o) => o.requestOptions,
        #required: (o) => o.required,
        #response: (o) => o.response,
        #responseChanged: (o) => o.responseChanged,
        #root: (o) => o.root,
        #rootChanged: (o) => o.rootChanged,
        #runRequest: (o) => o.runRequest,
        #schema: (o) => o.schema,
        #schemas: (o) => o.schemas,
        #searchFilter: (o) => o.searchFilter,
        #searchFilterChanged: (o) => o.searchFilterChanged,
        #searchTerm: (o) => o.searchTerm,
        #searchTermChanged: (o) => o.searchTermChanged,
        #select: (o) => o.select,
        #selectOperation: (o) => o.selectOperation,
        #selected: (o) => o.selected,
        #selectedInputType: (o) => o.selectedInputType,
        #selectedInputTypeChanged: (o) => o.selectedInputTypeChanged,
        #selectedOp: (o) => o.selectedOp,
        #selection: (o) => o.selection,
        #selectionChanged: (o) => o.selectionChanged,
        #showModal: (o) => o.showModal,
        #sort: (o) => o.sort,
        #style: (o) => o.style,
        #summary: (o) => o.summary,
        #title: (o) => o.title,
        #toggle: (o) => o.toggle,
        #toggleSelection: (o) => o.toggleSelection,
        #toggleSidebar: (o) => o.toggleSidebar,
        #tracesEnabled: (o) => o.tracesEnabled,
        #tracesEnabledChanged: (o) => o.tracesEnabledChanged,
        #type: (o) => o.type,
        #uid: (o) => o.uid,
        #username: (o) => o.username,
        #value: (o) => o.value,
        #widget: (o) => o.widget,
      },
      setters: {
        #avatar: (o, v) { o.avatar = v; },
        #body: (o, v) { o.body = v; },
        #canManageTraces: (o, v) { o.canManageTraces = v; },
        #children: (o, v) { o.children = v; },
        #connection: (o, v) { o.connection = v; },
        #connectionId: (o, v) { o.connectionId = v; },
        #currentTab: (o, v) { o.currentTab = v; },
        #dataType: (o, v) { o.dataType = v; },
        #datatype: (o, v) { o.datatype = v; },
        #description: (o, v) { o.description = v; },
        #doc: (o, v) { o.doc = v; },
        #docId: (o, v) { o.docId = v; },
        #document: (o, v) { o.document = v; },
        #documentId: (o, v) { o.documentId = v; },
        #endpoint: (o, v) { o.endpoint = v; },
        #endpointKey: (o, v) { o.endpointKey = v; },
        #input: (o, v) { o.input = v; },
        #inputType: (o, v) { o.inputType = v; },
        #isConnected: (o, v) { o.isConnected = v; },
        #key: (o, v) { o.key = v; },
        #label: (o, v) { o.label = v; },
        #method: (o, v) { o.method = v; },
        #module: (o, v) { o.module = v; },
        #multiple: (o, v) { o.multiple = v; },
        #multipleSelection: (o, v) { o.multipleSelection = v; },
        #name: (o, v) { o.name = v; },
        #nuxeoUrl: (o, v) { o.nuxeoUrl = v; },
        #opRequest: (o, v) { o.opRequest = v; },
        #opResponse: (o, v) { o.opResponse = v; },
        #operation: (o, v) { o.operation = v; },
        #opid: (o, v) { o.opid = v; },
        #password: (o, v) { o.password = v; },
        #request: (o, v) { o.request = v; },
        #required: (o, v) { o.required = v; },
        #response: (o, v) { o.response = v; },
        #root: (o, v) { o.root = v; },
        #searchFilter: (o, v) { o.searchFilter = v; },
        #searchTerm: (o, v) { o.searchTerm = v; },
        #selected: (o, v) { o.selected = v; },
        #selectedInputType: (o, v) { o.selectedInputType = v; },
        #selectedOp: (o, v) { o.selectedOp = v; },
        #selection: (o, v) { o.selection = v; },
        #tracesEnabled: (o, v) { o.tracesEnabled = v; },
        #type: (o, v) { o.type = v; },
        #uid: (o, v) { o.uid = v; },
        #username: (o, v) { o.username = v; },
        #value: (o, v) { o.value = v; },
        #widget: (o, v) { o.widget = v; },
      },
      parents: {
        smoke_19.NXSandboxApp: _M4,
        smoke_18.NXCommandEndpoints: _M12,
        smoke_0.NXConnection: _M1,
        smoke_16.NXOperation: _M3,
        smoke_8.NXRepositoryBrowser: _M6,
        smoke_10.NXRequestMonitor: _M9,
        smoke_11.NXRequestOptions: smoke_4.NXElement,
        smoke_13.NXResourceEndpoints: _M8,
        smoke_9.NXStructuresBrowser: _M8,
        smoke_12.NXWidget: _M4,
        smoke_6.Tree: _M3,
        smoke_3.TreeNode: _M3,
        smoke_4.NXElement: _M4,
        smoke_4.NXModule: smoke_4.NXElement,
        smoke_7.UISidebar: _M0,
        _M0: smoke_1.PolymerElement,
        _M1: _M0,
        _M10: smoke_4.NXModule,
        _M11: _M10,
        _M12: _M11,
        _M2: smoke_4.NXElement,
        _M3: _M2,
        _M4: smoke_1.PolymerElement,
        _M5: smoke_4.NXModule,
        _M6: _M5,
        _M7: _M5,
        _M8: _M7,
        _M9: smoke_4.NXElement,
      },
      declarations: {
        smoke_19.NXSandboxApp: {
          #connectionId: const Declaration(#connectionId, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #connectionIdChanged: const Declaration(#connectionIdChanged, Function, kind: METHOD),
          #module: const Declaration(#module, smoke_4.NXModule, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #moduleChanged: const Declaration(#moduleChanged, Function, kind: METHOD),
        },
        smoke_18.NXCommandEndpoints: {
          #canManageTraces: const Declaration(#canManageTraces, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchFilter: const Declaration(#searchFilter, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchFilterChanged: const Declaration(#searchFilterChanged, Function, kind: METHOD),
          #searchTerm: const Declaration(#searchTerm, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #selectedOp: const Declaration(#selectedOp, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #tracesEnabled: const Declaration(#tracesEnabled, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_0.NXConnection: {
          #avatar: const Declaration(#avatar, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #canManageTraces: const Declaration(#canManageTraces, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isConnected: const Declaration(#isConnected, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isConnectedChanged: const Declaration(#isConnectedChanged, Function, kind: METHOD),
          #nuxeoUrl: const Declaration(#nuxeoUrl, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #nuxeoUrlChanged: const Declaration(#nuxeoUrlChanged, Function, kind: METHOD),
          #password: const Declaration(#password, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #tracesEnabled: const Declaration(#tracesEnabled, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #tracesEnabledChanged: const Declaration(#tracesEnabledChanged, Function, kind: METHOD),
          #username: const Declaration(#username, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_16.NXOperation: {
          #description: const Declaration(#description, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #label: const Declaration(#label, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #method: const Declaration(#method, smoke_16.NxOperationMethod, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #name: const Declaration(#name, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #opRequest: const Declaration(#opRequest, smoke_17.OperationRequest, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #opResponse: const Declaration(#opResponse, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #opid: const Declaration(#opid, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #opidChanged: const Declaration(#opidChanged, Function, kind: METHOD),
          #selectedInputType: const Declaration(#selectedInputType, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #selectedInputTypeChanged: const Declaration(#selectedInputTypeChanged, Function, kind: METHOD),
        },
        smoke_8.NXRepositoryBrowser: {
          #document: const Declaration(#document, smoke_5.Document, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #documentId: const Declaration(#documentId, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #documentIdChanged: const Declaration(#documentIdChanged, Function, kind: METHOD),
        },
        smoke_10.NXRequestMonitor: {
          #CURLRequest: const Declaration(#CURLRequest, String, kind: PROPERTY, isFinal: true, annotations: const [smoke_2.observable]),
          #body: const Declaration(#body, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #currentTab: const Declaration(#currentTab, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #request: const Declaration(#request, smoke_5.BaseRequest, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #requestChanged: const Declaration(#requestChanged, Function, kind: METHOD),
          #response: const Declaration(#response, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #responseChanged: const Declaration(#responseChanged, Function, kind: METHOD),
        },
        smoke_11.NXRequestOptions: const {},
        smoke_13.NXResourceEndpoints: {
          #endpoint: const Declaration(#endpoint, smoke_14.Resource, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #endpointKey: const Declaration(#endpointKey, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #endpointKeyChanged: const Declaration(#endpointKeyChanged, Function, kind: METHOD),
          #method: const Declaration(#method, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #methodChanged: const Declaration(#methodChanged, Function, kind: METHOD),
          #operation: const Declaration(#operation, smoke_14.Operation, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #operationChanged: const Declaration(#operationChanged, Function, kind: METHOD),
          #request: const Declaration(#request, smoke_15.Request, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #response: const Declaration(#response, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchFilter: const Declaration(#searchFilter, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchTerm: const Declaration(#searchTerm, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_9.NXStructuresBrowser: {
          #searchFilter: const Declaration(#searchFilter, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchTerm: const Declaration(#searchTerm, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #selection: const Declaration(#selection, smoke_9.Selection, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #selectionChanged: const Declaration(#selectionChanged, Function, kind: METHOD),
        },
        smoke_12.NXWidget: {
          #datatype: const Declaration(#datatype, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #label: const Declaration(#label, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #required: const Declaration(#required, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #type: const Declaration(#type, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #value: const Declaration(#value, dynamic, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
        },
        smoke_6.Tree: {
          #key: const Declaration(#key, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #multipleSelection: const Declaration(#multipleSelection, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #root: const Declaration(#root, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #rootChanged: const Declaration(#rootChanged, Function, kind: METHOD),
          #selected: const Declaration(#selected, dynamic, kind: PROPERTY, annotations: const [smoke_1.published]),
        },
        smoke_3.TreeNode: {
          #children: const Declaration(#children, List, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #doc: const Declaration(#doc, smoke_5.Document, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #docChanged: const Declaration(#docChanged, Function, kind: METHOD),
          #docId: const Declaration(#docId, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #docIdChanged: const Declaration(#docIdChanged, Function, kind: METHOD),
          #icon: const Declaration(#icon, dynamic, kind: PROPERTY, isFinal: true, annotations: const [smoke_2.observable]),
          #isFolderish: const Declaration(#isFolderish, dynamic, kind: PROPERTY, isFinal: true, annotations: const [smoke_2.observable]),
          #multiple: const Declaration(#multiple, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
        },
        smoke_4.NXElement: {
          #connection: const Declaration(#connection, smoke_0.NXConnection, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #connectionId: const Declaration(#connectionId, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_1.published]),
          #connectionIdChanged: const Declaration(#connectionIdChanged, Function, kind: METHOD),
          #isConnected: const Declaration(#isConnected, bool, kind: PROPERTY, isFinal: true, annotations: const [smoke_2.observable]),
        },
        smoke_7.UISidebar: const {},
        _M10: {
          #searchTermChanged: const Declaration(#searchTermChanged, Function, kind: METHOD),
        },
        _M7: {
          #searchTermChanged: const Declaration(#searchTermChanged, Function, kind: METHOD),
        },
      },
      names: {
        #CURLRequest: r'CURLRequest',
        #action: r'action',
        #alert: r'alert',
        #alerts: r'alerts',
        #asFileSize: r'asFileSize',
        #avatar: r'avatar',
        #body: r'body',
        #callOp: r'callOp',
        #canManageTraces: r'canManageTraces',
        #capitalize: r'capitalize',
        #categories: r'categories',
        #category: r'category',
        #child: r'child',
        #children: r'children',
        #connect: r'connect',
        #connection: r'connection',
        #connectionId: r'connectionId',
        #connectionIdChanged: r'connectionIdChanged',
        #currentTab: r'currentTab',
        #dataType: r'dataType',
        #datatype: r'datatype',
        #description: r'description',
        #disconnect: r'disconnect',
        #doc: r'doc',
        #docChanged: r'docChanged',
        #docId: r'docId',
        #docIdChanged: r'docIdChanged',
        #document: r'document',
        #documentId: r'documentId',
        #documentIdChanged: r'documentIdChanged',
        #endpoint: r'endpoint',
        #endpointKey: r'endpointKey',
        #endpointKeyChanged: r'endpointKeyChanged',
        #endpoints: r'endpoints',
        #error: r'error',
        #errors: r'errors',
        #facet: r'facet',
        #facets: r'facets',
        #field: r'field',
        #fields: r'fields',
        #filter: r'filter',
        #goHome: r'goHome',
        #goRoot: r'goRoot',
        #headers: r'headers',
        #icon: r'icon',
        #id: r'id',
        #input: r'input',
        #inputType: r'inputType',
        #isConnected: r'isConnected',
        #isConnectedChanged: r'isConnectedChanged',
        #isFolderish: r'isFolderish',
        #isNotEmpty: r'isNotEmpty',
        #item: r'item',
        #items: r'items',
        #key: r'key',
        #keys: r'keys',
        #label: r'label',
        #length: r'length',
        #message: r'message',
        #method: r'method',
        #methodChanged: r'methodChanged',
        #methods: r'methods',
        #module: r'module',
        #moduleChanged: r'moduleChanged',
        #modules: r'modules',
        #multiple: r'multiple',
        #multipleSelection: r'multipleSelection',
        #name: r'name',
        #navigate: r'navigate',
        #nodeSelected: r'nodeSelected',
        #nuxeoUrl: r'nuxeoUrl',
        #nuxeoUrlChanged: r'nuxeoUrlChanged',
        #onFileSelected: r'onFileSelected',
        #op: r'op',
        #opRequest: r'opRequest',
        #opResponse: r'opResponse',
        #operation: r'operation',
        #operationChanged: r'operationChanged',
        #operations: r'operations',
        #opid: r'opid',
        #opidChanged: r'opidChanged',
        #param: r'param',
        #params: r'params',
        #parent: r'parent',
        #password: r'password',
        #path: r'path',
        #prefix: r'prefix',
        #properties: r'properties',
        #request: r'request',
        #requestChanged: r'requestChanged',
        #requestOptions: r'requestOptions',
        #required: r'required',
        #response: r'response',
        #responseChanged: r'responseChanged',
        #root: r'root',
        #rootChanged: r'rootChanged',
        #runRequest: r'runRequest',
        #schema: r'schema',
        #schemas: r'schemas',
        #searchFilter: r'searchFilter',
        #searchFilterChanged: r'searchFilterChanged',
        #searchTerm: r'searchTerm',
        #searchTermChanged: r'searchTermChanged',
        #select: r'select',
        #selectOperation: r'selectOperation',
        #selected: r'selected',
        #selectedInputType: r'selectedInputType',
        #selectedInputTypeChanged: r'selectedInputTypeChanged',
        #selectedOp: r'selectedOp',
        #selection: r'selection',
        #selectionChanged: r'selectionChanged',
        #showModal: r'showModal',
        #sort: r'sort',
        #style: r'style',
        #summary: r'summary',
        #title: r'title',
        #toggle: r'toggle',
        #toggleSelection: r'toggleSelection',
        #toggleSidebar: r'toggleSidebar',
        #tracesEnabled: r'tracesEnabled',
        #tracesEnabledChanged: r'tracesEnabledChanged',
        #type: r'type',
        #uid: r'uid',
        #username: r'username',
        #value: r'value',
        #widget: r'widget',
      }));
  startPolymer([
      () => Polymer.register('nx-connection', i0.NXConnection),
      () => Polymer.register('nx-tree-node', i1.TreeNode),
      () => Polymer.register('nx-tree', i2.Tree),
      () => Polymer.register('ui-sidebar', i3.UISidebar),
      () => Polymer.register('nx-repository-browser', i4.NXRepositoryBrowser),
      () => Polymer.register('nx-structures-browser', i5.NXStructuresBrowser),
      () => Polymer.register('nx-request-monitor', i6.NXRequestMonitor),
      () => Polymer.register('nx-request-options', i7.NXRequestOptions),
      () => Polymer.register('nx-widget', i8.NXWidget),
      () => Polymer.register('nx-resource-endpoints', i9.NXResourceEndpoints),
      () => Polymer.register('nx-operation', i10.NXOperation),
      () => Polymer.register('nx-command-endpoints', i11.NXCommandEndpoints),
      () => Polymer.register('nx-sandbox-app', i12.NXSandboxApp),
    ]);
}
